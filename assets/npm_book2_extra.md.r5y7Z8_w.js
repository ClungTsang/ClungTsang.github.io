import{_ as a,c as s,b0 as p,o as n}from"./chunks/framework.D6xZgKGL.js";const h=JSON.parse('{"title":"在运行 npm install 命令时，可以添加一些额外的指令来执行特定的操作。以下是一些常用的额外指令：","description":"","frontmatter":{},"headers":[],"relativePath":"npm/book2_extra.md","filePath":"npm/book2_extra.md","lastUpdated":1690561590000}'),t={name:"npm/book2_extra.md"};function i(l,e,o,c,d,g){return n(),s("div",null,e[0]||(e[0]=[p('<h1 id="在运行-npm-install-命令时-可以添加一些额外的指令来执行特定的操作。以下是一些常用的额外指令" tabindex="-1">在运行 <code>npm install</code> 命令时，可以添加一些额外的指令来执行特定的操作。以下是一些常用的额外指令： <a class="header-anchor" href="#在运行-npm-install-命令时-可以添加一些额外的指令来执行特定的操作。以下是一些常用的额外指令" aria-label="Permalink to &quot;在运行 `npm install` 命令时，可以添加一些额外的指令来执行特定的操作。以下是一些常用的额外指令：&quot;">​</a></h1><ol><li><p><code>--save</code> 或 <code>-S</code>: 将安装的包添加到 <code>dependencies</code> 字段中的 <code>package.json</code> 文件中。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install package-name --save</span></span></code></pre></div></li><li><p><code>--save-dev</code> 或 <code>-D</code>: 将安装的包添加到 <code>devDependencies</code> 字段中的 <code>package.json</code> 文件中。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install package-name --save-dev</span></span></code></pre></div></li><li><p><code>--global</code> 或 <code>-g</code>: 将包安装为全局包，而不是项目的局部依赖。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install package-name --global</span></span></code></pre></div></li><li><p><code>--production</code>: 只安装项目的生产依赖，跳过开发依赖的安装。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install --production</span></span></code></pre></div></li><li><p><code>--no-save</code>: 安装包时不将其添加到 <code>package.json</code> 文件中的任何依赖字段。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install package-name --no-save</span></span></code></pre></div></li><li><p><code>--ignore-scripts</code>：在安装过程中跳过执行包的安装脚本。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install package-name --ignore-scripts</span></span></code></pre></div></li><li><p><code>--legacy-peer-deps</code>：在安装过程中使用旧版本的对等依赖解决算法。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install package-name --legacy-peer-deps</span></span></code></pre></div></li><li><p><code>--prefer-offline</code>：优先使用本地缓存的包进行安装，而不是从网络下载。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install package-name --prefer-offline</span></span></code></pre></div></li><li><p><code>--no-package-lock</code>：在安装过程中不生成或更新 <code>package-lock.json</code> 文件。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install package-name --no-package-lock</span></span></code></pre></div></li><li><p><code>--dry-run</code>：模拟安装过程，显示将要执行的操作，但不实际安装包。</p></li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm install package-name --dry-run</span></span></code></pre></div><p>这些是一些常见的额外指令，可以根据具体情况在 <code>npm install</code> 命令后面添加。记得查阅 npm 的<a href="https://www.npmjs.cn/" target="_blank" rel="noreferrer">官方文档</a>以获取更多详细信息和用法示例。</p>',4)]))}const u=a(t,[["render",i]]);export{h as __pageData,u as default};
